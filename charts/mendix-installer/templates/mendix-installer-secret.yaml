apiVersion: v1
kind: Secret
metadata:
  name: mendix-installer-config-file
  namespace: mendix
type: Opaque
stringData:
  mendix-installer-config-file: |
    namespace: mendix
    cluster_mode: connected
    mask:
      database_plan: false
      storage_plan: true
      ingress: true
      registry: true
      proxy: false
      custom_tls: true
    ingress:
      type: kubernetes-ingress
      enable_tls: true
      k8s_ingress:
        domain: "{{ .Values.ingress.domainName }}"
        useCustomIngressClass: true
        customIngressClass: nginx
        customIngressClassAsAnnotation: true
        path: /
      service: null
    registry:
      type: amazon-ecr
      ecr_registry:
        name: "{{ .Values.registry.repositoryName }}"
        hostname: "{{ .Values.registry.pullUrl }}"
        aws_region: "{{ .Values.awsRegion }}"
        is_static_credential: false
        aws_iam_role: "{{ .Values.registry.iamRole }}"
        kubernetes_service_account: "mendix-builder"
    storage_plan:
      name: s3
      type: amazon-s3
      s3:
        irsa_authentication: true
        create_bucket: false
        create_user: false
        create_inline_policy: false
        existing_bucket: "{{ .Values.storage_plan.existing_bucket }}"
        existing_policy: "{{ .Values.storage_plan.existing_policy }}"
        bucket_autogen_prefix: true
        region: "{{ .Values.awsRegion }}"
        admin_iam_role: "{{ .Values.storage_plan.admin_iam_role }}"
        kubernetes_service_account: "{{ .Values.storage_plan.kubernetes_service_account }}"
        oidc_url: "{{ .Values.storage_plan.oidc_url }}"
    custom_tls:
      ca_certificates_secret_name: mendix-custom-tls

{{- range $.Values.database_plans }}
---
apiVersion: v1
kind: Secret
metadata:
  name: "mendix-installer-config-db-{{ .name }}"
  namespace: mendix
type: Opaque
stringData:
  mendix-installer-config-file: |
    namespace: mendix
    cluster_mode: connected
    mask:
      database_plan: true
      storage_plan: false
      ingress: false
      registry: false
      proxy: false
      custom_tls: false
    database_plan:
      name: "{{ .name }}"
      type: postgres
      postgres:
          databaseprops:
              host: "{{ .host }}"
              port: {{ .port }}
              user: "{{ .user }}"
              password: ""
              strict_tls: true
          db_name: "{{ .db_name }}"
          authentication_mode: aws-iam
          aws_iam_role: "{{ .aws_iam_role }}"
          kubernetes_service_account: "{{ .kubernetes_service_account }}"
---
apiVersion: v1
kind: Secret
metadata:
  name: "mendix-rds-master-pass-{{ .name }}"
  namespace: mendix
type: Opaque
stringData:
  rds-password: "{{ .master_password }}"
{{- end }}