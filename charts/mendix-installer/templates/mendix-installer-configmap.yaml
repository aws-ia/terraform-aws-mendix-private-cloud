apiVersion: v1
kind: ConfigMap
metadata:
  name: mxpc-cli-installer-script
  namespace: mendix
data:
  mxpc-cli-installer-script: | 
    #/bin/sh

    echo "Configuring kubeconfig for mxpc-cli..."
    KUBE_TOKEN=$(cat /var/run/secrets/kubernetes.io/serviceaccount/token)
    KUBE_SERVER="https://${KUBERNETES_SERVICE_HOST}:${KUBERNETES_SERVICE_PORT}"
    kubectl config set-cluster default --server="${KUBE_SERVER}" --certificate-authority=/var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    kubectl config set-credentials default --token="${KUBE_TOKEN}"
    kubectl config set-context default --cluster=default --user=default
    kubectl config use-context default
    echo "Kubeconfig for mxpc-cli configured."

    wget https://cdn.mendix.com/mendix-for-private-cloud/mxpc-cli/mxpc-cli-{{ .Values.mendixOperatorVersion }}-linux-amd64.tar.gz
    tar xvf mxpc-cli-{{ .Values.mendixOperatorVersion }}-linux-amd64.tar.gz
    ./mxpc-cli base-install --namespace mendix -i {{ .Values.namespaceID }} -s {{ .Values.namespaceSecret }} --clusterMode connected --clusterType generic --clusterTag="aws-reference-deployment"
    
    wget --output-document=custom.crt https://truststore.pki.rds.amazonaws.com/global/global-bundle.pem
    kubectl -n mendix create secret generic mendix-custom-tls --from-file=custom.crt=custom.crt
    
    ./mxpc-cli apply-config -i {{ .Values.namespaceID }} -s {{ .Values.namespaceSecret }} --file mendix-installer-config-file/mendix-installer-config-file

{{- range $.Values.database_plans }}
    ./mxpc-cli apply-config -i {{ $.Values.namespaceID }} -s {{ $.Values.namespaceSecret }} --file mendix-installer-config-db-{{ .name }}/mendix-installer-config-file
  
    export PGUSER={{ .user }}
    export PGHOST={{ .host }}
    export PGPASSWORD=$(cat mendix-rds-master-pass-{{ .name }}/rds-password)

    psql -c 'GRANT rds_iam TO {{ .user }};'
    
    kubectl -n mendix delete secret mendix-rds-master-pass-{{ .name }}
{{- end }}

    kubectl -n mendix patch OperatorConfiguration mendix-operator-configuration --type merge --patch '{"spec":{"endpoint":{"ingress":{"annotations":{"cert-manager.io/cluster-issuer":"letsencrypt-prod"}}}}}'
    kubectl -n mendix patch OperatorConfiguration mendix-operator-configuration --type merge --patch '{"spec":{"endpoint":{"ingress":{"tlsSecretName":"tls-{{ .Values.appName }}"}}}}'
    kubectl -n mendix patch OperatorConfiguration mendix-operator-configuration --type merge --patch '{"spec":{"runtimeAutomountServiceAccountToken":true,"runtimeDeploymentPodAnnotations":{"linkerd.io/inject":"enabled","prometheus.io/path":"/metrics","prometheus.io/port":"8900","prometheus.io/scrape":"true"}}}'