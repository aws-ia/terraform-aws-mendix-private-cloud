apiVersion: v1
kind: Secret
metadata:
  name: mysecret
  namespace: mendix
type: Opaque
stringData:
  mysecret: |
    namespace: mendix
    cluster_mode: connected
    mask:
      database_plan: true
      storage_plan: true
      ingress: true
      registry: true
      proxy: false
      custom_tls: false
    database_plan:
      name: database
      type: postgres
      postgres:
        databaseprops:
          host: "{{ .Values.storageplan.database.host }}"
          port: {{ .Values.storageplan.database.port }}
          user: "{{ .Values.storageplan.database.username }}"
          password: "{{ .Values.storageplan.database.password }}"
          strict_tls: false
        db_name: "{{ .Values.storageplan.database.databaseName }}"
    storage_plan:
      name: storage
      type: amazon-s3
      s3:
        create_bucket: false
        create_user: false
        create_inline_policy: false
        existing_bucket: ""
        existing_policy: ""
        bucket_autogen_prefix: true
        bucket_prefix: ""
        share_bucket: true
        endpoint: "{{ .Values.storageplan.file.endPoint }}"
        access_key: "{{ .Values.storageplan.file.accessKey }}"
        secret_key: "{{ .Values.storageplan.file.secretKey }}"
    ingress:
      type: kubernetes-ingress
      enable_tls: true
      k8s_ingress:
        domain: "{{ .Values.ingress.domainName }}"
        useCustomIngressClass: true
        customIngressClass: nginx
        customIngressClassAsAnnotation: true
        path: /
      service: null
    registry:
      type: amazon-ecr
      ecr_registry:
        name: "{{ .Values.registry.repositoryName }}"
        hostname: "{{ .Values.registry.pullUrl }}"
        aws_region: "{{ .Values.AWSRegion }}"
        is_static_credential: false
        aws_iam_role: "{{ .Values.registry.iamRole }}"
        kubernetes_service_account: "mendix-builder"
